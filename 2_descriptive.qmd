```{r echo = FALSE, include=FALSE}
library(tidyverse)
library(survey)
library(haven)
library(xtable)

here::i_am("2_descriptive.qmd")
options(box.path = here::here())
box::use(./functions)
box::reload(functions)
options(survey.lonely.psu="adjust")

df_intensive <- readRDS("data/df_intensive.rds")
df_extensive <- readRDS("data/df_extensive.rds")
```



# Pre-treatment characteristics

```{r echo = FALSE}
df_pre_in <- df_intensive  |> 
  filter(year < 2009) 
df_pre_ex <- df_extensive  |> 
  filter(year < 2009)

intensive_design <- svydesign(
  id = ~varunit, 
  strata = ~varstrat, 
  weights = ~expr, 
  data = df_pre_in, 
  nest = TRUE
)
extensive_design <- svydesign(
  id = ~varunit, 
  strata = ~varstrat, 
  weights = ~expr, 
  data = df_pre_ex, 
  nest = TRUE,
)

t1 <- svyby(
  ~ age + educ + civilstatus + urb  + employment + unemployment + contract, 
  ~ eligible, 
  extensive_design, 
  svymean
)

t2 <- svyby(
  ~ age + educ + civilstatus + urb + log_jobincome + log_totalincome + hours,
  ~ eligible,
  design = intensive_design,
  svymean
)

bind_rows(t1, t2)
```

# Changes

```{r include = FALSE}
intensive_design <- svydesign(
  id = ~varunit, 
  strata = ~varstrat, 
  weights = ~expr, 
  data = df_intensive, 
  nest = TRUE
)
extensive_design <- svydesign(
  id = ~varunit, 
  strata = ~varstrat, 
  weights = ~expr, 
  data = df_intensive, 
  nest = TRUE
)

gen_diff_table <- function (surveydesign, outcomes) {
  # Create an empty data frame to store the results
  results <- data.frame(
    year = numeric(),
    var = character(),
    treatment_mean = numeric(),
    treatment_se = numeric(),
    control_mean = numeric(),
    control_se = numeric(),
    difference = numeric(),
    difference_se = numeric()
  )
  
  # Loop over the years
  for (outcome in outcomes) {
    
    print(outcome)
    
    for (y in unique(df_intensive$year)) {
      # Filter the data for the current year
      year_data <- subset(surveydesign, year == y)
      
      # Calculate the mean and standard error of log_jobincome for each group
      treatment <- svymean(as.formula(paste0("~", outcome)),
                                          subset(year_data, eligible == 1))
      control <- svymean(as.formula(paste0("~", outcome)),
                                        subset(year_data, eligible == 0))
      
      # Calculate the standard error
      difference_se <- sqrt(SE(treatment)^2  + SE(control)^2)
      
      # Store the results for the current year
      results <- bind_rows(
        results,
        data.frame(
          year = y,
          var = outcome,
          treatment_mean = mean(treatment),
          treatment_se = as.numeric(SE(treatment)),
          control_mean = mean(control),
          control_se = as.numeric(SE(control)),
          difference = mean(treatment) - mean(control),
          difference_se = as.numeric(difference_se)
        )
      )
      
    }
  }
  
  return(results)
}
```

```{r}
results_intensive <- gen_diff_table(intensive_design, c("log_jobincome", "log_totalincome", "log_hours"))

diff_table <- results_intensive |> 
  pivot_wider(names_from = var, values_from = !c(year, var)) |> 
  round(2) |> 
  arrange(year)

diff_table_in <- xtable(diff_table, caption = "Simple Difference (Intensive Margin)", 
                        label = "tab:diff-table")
```

```{r}
extensive_design <- svydesign(
  id = ~varunit, 
  strata = ~varstrat, 
  weights = ~expr, 
  data = df_extensive, 
  nest = TRUE,
)

results_extensive <- gen_diff_table(extensive_design, c("lfp", "employment", "unemployment", "contract"))

diff_table_ex <- results_extensive |> 
  pivot_wider(names_from = var, values_from = !c(year, var)) |> 
  round(2) |> 
  arrange(year)

diff_table_ex <- xtable(diff_table_ex, caption = "Simple Comparison of Extensive Margins", 
                        label = "tab:diff-table-extensive")
```





# Those who took SEJ

```{r echo=FALSE}
takeups <- df_extensive |> filter(subsidio_joven == 1)
takeups_design <- svydesign(
  id = ~varunit, 
  strata = ~varstrat, 
  weights = ~expr, 
  data = takeups, 
  nest = TRUE, 
)

svytable(~decil, design = takeups_design) |> prop.table() * 100
svytable(~age, design = takeups_design)  |> prop.table() * 100
svytable(~year, design = takeups_design) |> prop.table() * 100
svytable(~educ, design = takeups_design) |> prop.table() * 100
svytable(~urb, design = takeups_design) |> prop.table() * 100
svytable(~civilstatus, design = takeups_design) |> prop.table() * 100
svytable(~region, design = takeups_design) |> prop.table() * 100
```

```{r echo=FALSE}

df_takeup <- df_intensive |> 
  filter(subsidio_joven == 1)

intensive_design <- svydesign(
  id = ~varunit, 
  strata = ~varstrat, 
  weights = ~expr, 
  data = df_intensive, 
  nest = TRUE
)

extensive_design <- svydesign(
  id = ~varunit, 
  strata = ~varstrat, 
  weights = ~expr, 
  data = df_extensive, 
  nest = TRUE,
)

takeup_design <- svydesign(
  id = ~varunit, 
  strata = ~varstrat, 
  weights = ~expr, 
  data = df_takeup, 
  nest = TRUE,
)

# Extract tables
takeup_table <- svytable(~region + year, design = takeup_design)
intensive_table <- svytable(~region + year, design = intensive_design)

# Subset intensive_table to match the years in takeup_table
intensive_table_subset <- intensive_table[, colnames(takeup_table)]
takeup_table / intensive_table_subset
```

```{r}
balance_takeups <- takeups  |> 
  summarise(
    prop_age = list(prop.table(table(age))*100), 
    prop_educ = list(prop.table(table(educ))*100),
    prop_civilstatus = list(prop.table(table(civilstatus))*100),
    # prop_region = list(prop.table(table(region))),
    prop_urb = list(prop.table(table(urb))*100)
  ) |> 
  unnest_wider(col = c(prop_age, prop_educ, prop_civilstatus, prop_urb), names_sep = "_")
```

