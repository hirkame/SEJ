```{r echo = FALSE, include=FALSE}
library(tidyverse)
library(haven)
library(survey)
```


## Preprocess


```{r}
raw_data <- read_dta("data/CASEN_allyears_v9.dta")

df_casen <- as.data.frame(raw_data)

df_casen <- df_casen |> 
  filter(year >= 2000) |> 
  select(-c(municipality, id)) |> 
  mutate(
    # Substitute NA by 0
    across(
      .fns = ~ if_else(is.na(.x), 0, .x),
      .cols = c(subsidio_joven, subsidio_joven_income,
                jobincome, totalincome, totalincome_hh)
    ),
    across(
      .fns = ~ as.factor(.x), 
      .cols = c(region, urb, gender, student, civilstatus, educ)
    ),
    educ = relevel(educ, ref = "1"),
    experience = age - schooling - 6, 
    lfp = if_else(activ %in% 1:2, 1, 0), 
    employment = if_else(activ == 1, 1, 0), 
    unemployment =  if_else(activ == 2, 1, 0), 
    id = row_number(), 
    cohort = year - age
  )
```


## DID variables

```{r}
df_casen <- df_casen |> 
  mutate(
    eligible = if_else(
      age %in% 19:24,
      1, 
      0
    ), 
    non_eligible = if_else(
      (age %in% 26:31) & (subsidio_joven == 0), 
      1,
      0
    ), 
    post = if_else(year > 2009, 1, 0),
    lineartrend = year - 2009, 
    period = as.factor(year - 2009) |> relevel(ref = "-3"),
    gname = if_else(eligible == 1, 2010, 0), 
  )
```

## Sample restriction

```{r}
df_casen <- df_casen |> 
  filter(eligible == 1 | non_eligible == 1) 
nrow(df_casen)

df_casen <- df_casen |> 
  filter(student != "1") 
nrow(df_casen)

df_casen <- df_casen |> 
  filter(gender != "1") 
nrow(df_casen)

df_casen <- df_casen |> 
  filter(
    !is.na(educ)
  )
nrow(df_casen)

df_casen$educ <- droplevels(df_casen$educ)

df_casen <- df_casen |> 
  filter(!is.na(civilstatus) & !is.na(experience))
nrow(df_casen)
```


## Save 

```{r}
df_intensive <- df_casen |> 
  filter(
    jobincome > 0 & totalincome > 0 
  ) |> 
  mutate(
    across(
      .cols = c(jobincome, totalincome, hours), 
      .fns = log,
      .names = "log_{.col}"
    )
  ) %>%
  filter(hours > 0 & hours < 80 & !is.na(log_hours))
nrow(df_intensive)

saveRDS(df_intensive, "data/df_intensive.rds")


df_extensive <- df_casen
saveRDS(df_extensive, "data/df_extensive.rds")
nrow(df_extensive)
```



